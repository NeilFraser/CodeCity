#!/usr/bin/env node

'use strict';

var $ = require('./core.js');

var immovable = Object.create($.physical);
immovable.name = 'immovable';

var movable = Object.create($.physical);
movable.name = 'movable';
movable.moveable = function(dest) { return true; };

var accepting = Object.create($.physical);
accepting.name = 'accepting';
accepting.acceptable = function(obj) { return true; };

var nonaccepting = Object.create($.physical);
nonaccepting.name = 'nonaccepting';

var movableAccepting = Object.create(movable);
movableAccepting.name = 'movableAccepting';
movableAccepting.acceptable = accepting.acceptable;

var movableAccepting2 = Object.create(movableAccepting);
movableAccepting2.name = 'movableAccepting2';

var combos = ['immovable.moveto(nonaccepting);',
	      'movable.moveto(nonaccepting);',
	      'immovable.moveto(accepting);',
	      'movable.moveto(accepting);',
	      'immovable.moveto(null);',
	      'movable.moveto(null);',
	      'movable.moveto(movable);',
	      'movableAccepting.moveto(accepting);',
	      'movableAccepting.moveto(movableAccepting);',
	      'movableAccepting2.moveto(movableAccepting);',
	      'movableAccepting.moveto(movableAccepting2);',
	     ];

for (var i = 0; i < combos.length; i++) {
  console.log();
  console.log(combos[i]);
  try {
    eval(combos[i]);
  } catch (e) {
    console.log('%s', e);
    // console.log(e);
  }

  var items = [$.physical, immovable, movable, accepting, nonaccepting,
	       movableAccepting, movableAccepting2];
  for (var j = 0; j < items.length; j++) {
    var locname;
    if ($.physical.isPrototypeOf(items[j].location)) {
      locname = items[j].location.name;
    } else {
      locname = items[j].location;
    }
    console.log("%s.location === %s", items[j].name, locname);
  }
}
