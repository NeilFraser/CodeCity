/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Top-level URL handlers for Code City.
 */

//////////////////////////////////////////////////////////////////////
// AUTO-GENERATED CODE FROM DUMP.  EDIT WITH CAUTION!
//////////////////////////////////////////////////////////////////////

$.http = {};

$.http['www.'] = {};

$.http['www.']['/'] = $.hosts.root['/'];

$.http['www.']['/error'] = $.hosts.test['/error'];

$.http['www.']['/mirror'] = {};
Object.setOwnerOf($.http['www.']['/mirror'], $.physicals.Neil);
// CLOSURE: type: function, vars: source, jssp
// CLOSURE: type: funexp, vars: Jssp
$.http['www.']['/mirror'].www = function jssp(request, response) {
  // DO NOT EDIT THIS CODE.  AUTOMATICALLY GENERATED BY JSSP.
  // To edit contents of generated page, edit this.source.
  return jssp.render(this, request, response);  // See $.Jssp for explanation.
};
Object.setPrototypeOf($.http['www.']['/mirror'].www, $.Jssp.prototype);
Object.setOwnerOf($.http['www.']['/mirror'].www, $.physicals.Neil);
Object.setOwnerOf($.http['www.']['/mirror'].www.prototype, $.physicals.Neil);
$.http['www.']['/mirror'].www.source = "<html>\n  <head>\n    <title>Code City Browser Mirror</title>\n  </head>\n  <body>\n    <h1>Code City Browser Mirror</h1>\n\n<%\nfor (var key in request) {\n  if (!request.hasOwnProperty(key)) continue;\n  var value = request[key];\n  \n  response.write('<h2>request.' + $.utils.html.escape(key) + ':</h2>\\n');\n  response.write('<pre>');\n  if (key === 'user') {\n    response.write(value ? $.utils.html.escape(value.name) : value + '\\n');\n  } else if (key === 'host') {\n    response.write($.utils.html.escape($.Selector.for(value)) + '\\n');\n  } else if ($.utils.isObject(value) ) {\n    for (var subkey in value) {\n      response.write($.utils.html.escape(subkey + ': ' + JSON.stringify(value[subkey])) + '\\n');\n    }\n  } else {\n      response.write($.utils.html.escape($.utils.code.toSource(value)) + '\\n');\n  }\n  response.write('</pre>');\n}\n%>\n    <h2>request.fromSameOrigin():</h2>\n    <pre><%= request.fromSameOrigin() %></pre>\n    <p>Done</p>\n  </body>\n</html>";
$.http['www.']['/mirror'].www.hash_ = 'c7c3aeb9b9c2f3dfa208196c30dc43f1v1.0.0';
$.http['www.']['/mirror'].www.compiled_ = function(request, response) {
// DO NOT EDIT THIS CODE: AUTOMATICALLY GENERATED BY JSSP.
response.write("<html>\n  <head>\n    <title>Code City Browser Mirror</title>\n  </head>\n  <body>\n    <h1>Code City Browser Mirror</h1>\n\n");

for (var key in request) {
  if (!request.hasOwnProperty(key)) continue;
  var value = request[key];
  
  response.write('<h2>request.' + $.utils.html.escape(key) + ':</h2>\n');
  response.write('<pre>');
  if (key === 'user') {
    response.write(value ? $.utils.html.escape(value.name) : value + '\n');
  } else if (key === 'host') {
    response.write($.utils.html.escape($.Selector.for(value)) + '\n');
  } else if ($.utils.isObject(value) ) {
    for (var subkey in value) {
      response.write($.utils.html.escape(subkey + ': ' + JSON.stringify(value[subkey])) + '\n');
    }
  } else {
      response.write($.utils.html.escape($.utils.code.toSource(value)) + '\n');
  }
  response.write('</pre>');
}

response.write("\n    <h2>request.fromSameOrigin():</h2>\n    <pre>");
response.write(request.fromSameOrigin());
response.write("</pre>\n    <p>Done</p>\n  </body>\n</html>");
};
Object.setOwnerOf($.http['www.']['/mirror'].www.compiled_, $.physicals.Neil);
Object.setOwnerOf($.http['www.']['/mirror'].www.compiled_.prototype, $.physicals.Neil);
Object.defineProperty($.http['www.']['/mirror'].www.compiled_, 'name', {value: "$.www['/mirror'].www.compiled_"});
$.http['www.']['/mirror'].name = 'jssp';
Object.defineProperty($.http['www.']['/mirror'], 'name', {writable: false, enumerable: false});
$.http['www.']['/mirror'].length = 2;
Object.defineProperty($.http['www.']['/mirror'], 'length', {writable: false, enumerable: false, configurable: false});
$.http['www.']['/mirror'].prototype = {};
Object.defineProperty($.http['www.']['/mirror'], 'prototype', {enumerable: false, configurable: false});
Object.setOwnerOf($.http['www.']['/mirror'].prototype, $.physicals.Neil);
// CLOSURE: type: function, vars: source, jssp
// CLOSURE: type: funexp, vars: Jssp
$.http['www.']['/mirror'].prototype.constructor = function jssp(request, response) {
  // DO NOT EDIT THIS CODE.  AUTOMATICALLY GENERATED BY JSSP.
  // To edit contents of generated page, edit this.source.
  return jssp.render(this, request, response);  // See $.Jssp for explanation.
};
Object.defineProperty($.http['www.']['/mirror'].prototype, 'constructor', {enumerable: false});
Object.setPrototypeOf($.http['www.']['/mirror'].prototype.constructor, $.Jssp.prototype);
Object.setOwnerOf($.http['www.']['/mirror'].prototype.constructor, $.physicals.Neil);
$.http['www.']['/mirror'].prototype.constructor.prototype = $.http['www.']['/mirror'].prototype;
$.http['www.']['/mirror'].prototype.constructor.source = '';
$.http['www.']['/mirror'].prototype.constructor.hash_ = undefined;
$.http['www.']['/mirror'].prototype.constructor.compiled_ = undefined;
$.http['www.']['/mirror'].source = "<html>\n  <head>\n    <title>Code City Browser Mirror</title>\n  </head>\n  <body>\n    <h1>Code City Browser Mirror</h1>\n\n<%\nfor (var n in request) {\n  if (!request.hasOwnProperty(n)) {\n    continue;\n  }\n  response.write('<h2>request.' + $.utils.html.escape(n) + ':</h2>\\n');\n  response.write('<pre>');\n  if (n === 'user') {\n    response.write(request[n] ? $.utils.html.escape(request[n].name) : request[n] + '\\n');\n  } else {\n    if (request[n] && typeof request[n] === 'object') {\n      for (var m in request[n]) {\n        response.write($.utils.html.escape(m + ': ' + JSON.stringify(request[n][m])) + '\\n');\n      }\n    } else {\n        response.write($.utils.html.escape(JSON.stringify(request[n])) + '\\n');\n    }\n  }\n  response.write('</pre>');\n}\n%>\n    <h2>request.fromSameOrigin():</h2>\n    <pre><%= request.fromSameOrigin() %></pre>\n    <p>Done</p>\n  </body>\n</html>";
$.http['www.']['/mirror'].hash_ = undefined;
$.http['www.']['/mirror'].compiled_ = undefined;

$.http['www.']['/robots.txt'] = $.hosts.root['/robots.txt'];

$.http['connect.'] = null;

$.http['login.'] = null;

$.http['static.'] = null;

$.www = $.http['www.'];

