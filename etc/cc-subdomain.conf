# Nginx configuration for Code City using multiple subdomains.

# Configuration applying to all servers.
error_page 502 503 504 =503 /static/503.html;

proxy_set_header Host $http_host;
proxy_pass_header Server;
proxy_next_upstream_tries 1;
proxy_max_temp_file_size 0;
proxy_connect_timeout 10s;
proxy_send_timeout 10s;
proxy_read_timeout 10s;

# Redirect all http traffic to https.
server {
  # Listen on port 80 for both IPv6 and IPv4.
  listen [::]:80 ipv6only=off;
  return 301 https://$host$request_uri;
}

# Code City configuration
server {
  # Listen on port 443 for both IPv6 and IPv4.
  listen [::]:443 ssl ipv6only=off;

  # Replace INSTANCENAME with the domain name of your instance.  Make
  # sure that the resulting filenames point at the certificate files
  # created by certbot.
  ssl_certificate /etc/letsencrypt/live/INSTANCENAME/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/INSTANCENAME/privkey.pem;

  # # Canonicalise to a single domain.
  # #
  # # Replace regular expression with one that matches all non-canonical
  # # domains.
  # if ( $host ~ ^example\.codecity\.(academy|games)$ ) {
  #   # Replace INSTANCENAME with the canonical domain name of your instance.
  #   # E.g.: https://example.codecity.world$request_uri
  #   return 301 https://INSTANCENAME$request_uri;
  # }
  # # Replace regular expression with one that matches all non-canonical
  # # subdomains.
  # if ( $host ~ ^(.*)\.example\.codecity\.(academy|games)$ ) {
  #   # Replace INSTANCENAME with the canonical domain name of your instance.
  #   # E.g.: https://$1.example.codecity.world$request_uri
  #   return 301 https://$1.INSTANCENAME$request_uri;
  # }

  location / {
    # Proxy to Code City port 7780.
    proxy_pass http://127.0.0.1:7780/;
  }
}

# Login server.
server {
  listen [::]:443 ssl;

  # Replace INSTANCENAME with the domain name of your instance; make
  # sure the result is prefixed with the 'login' subdomain.
  # E.g.: login.example.codecity.world
  server_name login.INSTANCENAME;

  location / {
    # Proxy to loginServer.js port 7781.
    proxy_pass http://127.0.0.1:7781/;
  }
}

# Connect server.
server {
  listen [::]:443 ssl;

  # Replace INSTANCENAME with the domain name of your instance; make
  # sure the result is prefixed with the 'connect' subdomain.
  # E.g.: connect.example.codecity.world
  server_name connect.INSTANCENAME;

  location / {
    # Proxy to connectServer.js port 7782.
    proxy_pass http://127.0.0.1:7782/;
  }
}

# MobWrite server.
server {
  listen [::]:443 ssl;

  # Replace INSTANCENAME with the domain name of your instance; make
  # sure the result is prefixed with the 'mobwrite' subdomain.
  # E.g.: mobwrite.example.codecity.world
  server_name mobwrite.INSTANCENAME;

  location / {
    # Proxy to mobwrite_server.py port 7783.
    proxy_pass http://127.0.0.1:7783/mobwrite;
  }
}

# Static file server.
server {
  listen [::]:443 ssl;

  # Replace INSTANCENAME with the domain name of your instance; make
  # sure the result is prefixed with the 'static' subdomain.
  # E.g.: static.example.codecity.world
  server_name static.INSTANCENAME;

  location / {
    autoindex on;
    index index.html;
    # If required, edit to be full path to CodeCity static directory.
    # E.g. /home/cc/CodeCity/static
    root /home/cc/CodeCity/static;
  }
}
