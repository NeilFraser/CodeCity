# Redirect all http traffic to https.
server {
  listen 80;

  # Replace INSTANCENAME with the domain name of your instance.  If
  # your instance has more than one domain name, make a
  # space-separated list here (e.g.,: server_name cc.foo.com
  # cc.foo.co.uk;)
  server_name INSTANCENAME;

  # Replace INSTANCENAME with the domain name of your instance.  If
  # you have more than one domain name for you instance, put the
  # canonical one here.
  return 301 https://INSTANCENAME$request_uri;
}

# Code City configuration
server {
  listen 443 ssl;

  # Replace INSTANCENAME with the domain name of your instance.  If
  # your instance has more than one domain name, make a
  # space-separated list here (e.g.,: server_name cc.foo.com
  # cc.foo.co.uk;)
  server_name INSTANCENAME;

  # Replace INSTANCENAME with the domain name of your instance.  Make
  # sure that the resulting filenames point at the certificate files
  # created by certbot.
  ssl_certificate /etc/letsencrypt/live/INSTANCENAME/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/INSTANCENAME/privkey.pem;

  # Normalize to a single domain.
  # Replace INSTANCENAME with the canonical domain name of your instance.
  if ( $host != INSTANCENAME ) {
    # Replace INSTANCENAME with the domain name of your instance.  If
    # you have more than one domain name for you instance, put the
    # canonical one here.
    return 301 https://INSTANCENAME$request_uri;
  }

  location / {
    # Proxy to Code City port 7780.
    proxy_pass         http://localhost:7780/;
    error_page 502 503 504 =503 /static/503.html;

    # Things we'll probably want later:
    # proxy_set_header   Host             $host;
    # proxy_set_header   X-Real-IP        $remote_addr;
    # proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
  }

  location /static/ {
    # Static files.
    autoindex on;
    index index.html;
    # Edit to be full path to CodeCity directory (/static is implicit):
    root /home/cc/CodeCity;
  }

  location /login {
    # Proxy to loginServer.js port 7781.
    proxy_pass         http://localhost:7781/login;
    proxy_redirect     off;

    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_max_temp_file_size 0;

    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;

    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;
  }

  location /connect {
    # Proxy to connectServer.js port 7782.
    proxy_pass         http://localhost:7782/connect;
    proxy_redirect     off;

    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_max_temp_file_size 0;

    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;

    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;
  }
}
